// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TCLEstoque.Data;

namespace TCLEstoque.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201125133422_MigracaoInicial")]
    partial class MigracaoInicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("TCLEstoque.Models.Estoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nome")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Estoques");
                });

            modelBuilder.Entity("TCLEstoque.Models.LogAuditoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id")
                        .UseIdentityColumn();

                    b.Property<string>("DetalhesAuditoria")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DetalhesAuditoria");

                    b.Property<string>("EmailUsuario")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("EmailUsuario");

                    b.HasKey("Id");

                    b.ToTable("LogAuditoria");
                });

            modelBuilder.Entity("TCLEstoque.Models.Movimentacao", b =>
                {
                    b.Property<int>("MovimentacaoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("EstoqueID")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoID")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("MovimentacaoID");

                    b.HasIndex("EstoqueID");

                    b.HasIndex("ProdutoID");

                    b.ToTable("Movimentacoes");
                });

            modelBuilder.Entity("TCLEstoque.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("TCLEstoque.Models.Movimentacao", b =>
                {
                    b.HasOne("TCLEstoque.Models.Estoque", "Estoque")
                        .WithMany("Movimentacao")
                        .HasForeignKey("EstoqueID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TCLEstoque.Models.Produto", "Produto")
                        .WithMany("Movimentacao")
                        .HasForeignKey("ProdutoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estoque");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("TCLEstoque.Models.Estoque", b =>
                {
                    b.Navigation("Movimentacao");
                });

            modelBuilder.Entity("TCLEstoque.Models.Produto", b =>
                {
                    b.Navigation("Movimentacao");
                });
#pragma warning restore 612, 618
        }
    }
}
